// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/post.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Post struct {
	ID         string   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Title      string   `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	Body       string   `protobuf:"bytes,3,opt,name=Body" json:"Body,omitempty"`
	Categories []string `protobuf:"bytes,4,rep,name=Categories" json:"Categories,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=Tags" json:"Tags,omitempty"`
	UserID     string   `protobuf:"bytes,6,opt,name=UserID" json:"UserID,omitempty"`
	CreatedAt  string   `protobuf:"bytes,7,opt,name=CreatedAt" json:"CreatedAt,omitempty"`
	UpdatedAt  string   `protobuf:"bytes,8,opt,name=UpdatedAt" json:"UpdatedAt,omitempty"`
	Status     string   `protobuf:"bytes,9,opt,name=Status" json:"Status,omitempty"`
	Views      int64    `protobuf:"varint,10,opt,name=Views" json:"Views,omitempty"`
	Favourites int64    `protobuf:"varint,11,opt,name=Favourites" json:"Favourites,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Post) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Post) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Post) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Post) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Post) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Post) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Post) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Post) GetViews() int64 {
	if m != nil {
		return m.Views
	}
	return 0
}

func (m *Post) GetFavourites() int64 {
	if m != nil {
		return m.Favourites
	}
	return 0
}

type ReqPostCreate struct {
	Title      string   `protobuf:"bytes,1,opt,name=Title" json:"Title,omitempty"`
	Body       string   `protobuf:"bytes,2,opt,name=Body" json:"Body,omitempty"`
	Categories []string `protobuf:"bytes,3,rep,name=Categories" json:"Categories,omitempty"`
	Tags       []string `protobuf:"bytes,4,rep,name=Tags" json:"Tags,omitempty"`
}

func (m *ReqPostCreate) Reset()                    { *m = ReqPostCreate{} }
func (m *ReqPostCreate) String() string            { return proto.CompactTextString(m) }
func (*ReqPostCreate) ProtoMessage()               {}
func (*ReqPostCreate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ReqPostCreate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqPostCreate) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *ReqPostCreate) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ReqPostCreate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ResPostCreate struct {
	Post   *Post    `protobuf:"bytes,1,opt,name=Post" json:"Post,omitempty"`
	Errors []*Error `protobuf:"bytes,2,rep,name=Errors" json:"Errors,omitempty"`
}

func (m *ResPostCreate) Reset()                    { *m = ResPostCreate{} }
func (m *ResPostCreate) String() string            { return proto.CompactTextString(m) }
func (*ResPostCreate) ProtoMessage()               {}
func (*ResPostCreate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ResPostCreate) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *ResPostCreate) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ReqPostUpdate struct {
	Title      string   `protobuf:"bytes,1,opt,name=Title" json:"Title,omitempty"`
	Body       string   `protobuf:"bytes,2,opt,name=Body" json:"Body,omitempty"`
	Categories []string `protobuf:"bytes,3,rep,name=Categories" json:"Categories,omitempty"`
	Tags       []string `protobuf:"bytes,4,rep,name=Tags" json:"Tags,omitempty"`
}

func (m *ReqPostUpdate) Reset()                    { *m = ReqPostUpdate{} }
func (m *ReqPostUpdate) String() string            { return proto.CompactTextString(m) }
func (*ReqPostUpdate) ProtoMessage()               {}
func (*ReqPostUpdate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ReqPostUpdate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqPostUpdate) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *ReqPostUpdate) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ReqPostUpdate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ResPostUpdate struct {
	Post   *Post    `protobuf:"bytes,1,opt,name=Post" json:"Post,omitempty"`
	Errors []*Error `protobuf:"bytes,2,rep,name=Errors" json:"Errors,omitempty"`
}

func (m *ResPostUpdate) Reset()                    { *m = ResPostUpdate{} }
func (m *ResPostUpdate) String() string            { return proto.CompactTextString(m) }
func (*ResPostUpdate) ProtoMessage()               {}
func (*ResPostUpdate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ResPostUpdate) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *ResPostUpdate) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ReqPostDelete struct {
	PostID string `protobuf:"bytes,1,opt,name=PostID" json:"PostID,omitempty"`
}

func (m *ReqPostDelete) Reset()                    { *m = ReqPostDelete{} }
func (m *ReqPostDelete) String() string            { return proto.CompactTextString(m) }
func (*ReqPostDelete) ProtoMessage()               {}
func (*ReqPostDelete) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ReqPostDelete) GetPostID() string {
	if m != nil {
		return m.PostID
	}
	return ""
}

type ResPostDelete struct {
	Success bool     `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
	Errors  []*Error `protobuf:"bytes,2,rep,name=Errors" json:"Errors,omitempty"`
}

func (m *ResPostDelete) Reset()                    { *m = ResPostDelete{} }
func (m *ResPostDelete) String() string            { return proto.CompactTextString(m) }
func (*ResPostDelete) ProtoMessage()               {}
func (*ResPostDelete) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ResPostDelete) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ResPostDelete) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ReqPostChangeStatus struct {
	PostID    string `protobuf:"bytes,1,opt,name=PostID" json:"PostID,omitempty"`
	NewStatus string `protobuf:"bytes,2,opt,name=NewStatus" json:"NewStatus,omitempty"`
}

func (m *ReqPostChangeStatus) Reset()                    { *m = ReqPostChangeStatus{} }
func (m *ReqPostChangeStatus) String() string            { return proto.CompactTextString(m) }
func (*ReqPostChangeStatus) ProtoMessage()               {}
func (*ReqPostChangeStatus) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ReqPostChangeStatus) GetPostID() string {
	if m != nil {
		return m.PostID
	}
	return ""
}

func (m *ReqPostChangeStatus) GetNewStatus() string {
	if m != nil {
		return m.NewStatus
	}
	return ""
}

type ResPostChangeStatus struct {
	Post   *Post    `protobuf:"bytes,1,opt,name=Post" json:"Post,omitempty"`
	Errors []*Error `protobuf:"bytes,2,rep,name=Errors" json:"Errors,omitempty"`
}

func (m *ResPostChangeStatus) Reset()                    { *m = ResPostChangeStatus{} }
func (m *ResPostChangeStatus) String() string            { return proto.CompactTextString(m) }
func (*ResPostChangeStatus) ProtoMessage()               {}
func (*ResPostChangeStatus) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ResPostChangeStatus) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *ResPostChangeStatus) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ReqPostViewed struct {
	PostID string `protobuf:"bytes,1,opt,name=PostID" json:"PostID,omitempty"`
}

func (m *ReqPostViewed) Reset()                    { *m = ReqPostViewed{} }
func (m *ReqPostViewed) String() string            { return proto.CompactTextString(m) }
func (*ReqPostViewed) ProtoMessage()               {}
func (*ReqPostViewed) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ReqPostViewed) GetPostID() string {
	if m != nil {
		return m.PostID
	}
	return ""
}

type ResPostViewed struct {
	Post   *Post    `protobuf:"bytes,1,opt,name=Post" json:"Post,omitempty"`
	Errors []*Error `protobuf:"bytes,2,rep,name=Errors" json:"Errors,omitempty"`
}

func (m *ResPostViewed) Reset()                    { *m = ResPostViewed{} }
func (m *ResPostViewed) String() string            { return proto.CompactTextString(m) }
func (*ResPostViewed) ProtoMessage()               {}
func (*ResPostViewed) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ResPostViewed) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *ResPostViewed) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ReqPostFavourited struct {
	PostID string `protobuf:"bytes,1,opt,name=PostID" json:"PostID,omitempty"`
}

func (m *ReqPostFavourited) Reset()                    { *m = ReqPostFavourited{} }
func (m *ReqPostFavourited) String() string            { return proto.CompactTextString(m) }
func (*ReqPostFavourited) ProtoMessage()               {}
func (*ReqPostFavourited) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *ReqPostFavourited) GetPostID() string {
	if m != nil {
		return m.PostID
	}
	return ""
}

type ResPostFavourited struct {
	Post   *Post    `protobuf:"bytes,1,opt,name=Post" json:"Post,omitempty"`
	Errors []*Error `protobuf:"bytes,2,rep,name=Errors" json:"Errors,omitempty"`
}

func (m *ResPostFavourited) Reset()                    { *m = ResPostFavourited{} }
func (m *ResPostFavourited) String() string            { return proto.CompactTextString(m) }
func (*ResPostFavourited) ProtoMessage()               {}
func (*ResPostFavourited) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *ResPostFavourited) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *ResPostFavourited) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterType((*Post)(nil), "protos.Post")
	proto.RegisterType((*ReqPostCreate)(nil), "protos.ReqPostCreate")
	proto.RegisterType((*ResPostCreate)(nil), "protos.ResPostCreate")
	proto.RegisterType((*ReqPostUpdate)(nil), "protos.ReqPostUpdate")
	proto.RegisterType((*ResPostUpdate)(nil), "protos.ResPostUpdate")
	proto.RegisterType((*ReqPostDelete)(nil), "protos.ReqPostDelete")
	proto.RegisterType((*ResPostDelete)(nil), "protos.ResPostDelete")
	proto.RegisterType((*ReqPostChangeStatus)(nil), "protos.ReqPostChangeStatus")
	proto.RegisterType((*ResPostChangeStatus)(nil), "protos.ResPostChangeStatus")
	proto.RegisterType((*ReqPostViewed)(nil), "protos.ReqPostViewed")
	proto.RegisterType((*ResPostViewed)(nil), "protos.ResPostViewed")
	proto.RegisterType((*ReqPostFavourited)(nil), "protos.ReqPostFavourited")
	proto.RegisterType((*ResPostFavourited)(nil), "protos.ResPostFavourited")
}

func init() { proto.RegisterFile("protos/post.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xdb, 0x6a, 0xdb, 0x40,
	0x10, 0x45, 0x17, 0xcb, 0xd6, 0xba, 0x2e, 0x78, 0x5b, 0xca, 0x52, 0x4a, 0x11, 0x82, 0x52, 0x41,
	0xc1, 0x05, 0xf7, 0x0b, 0x5a, 0xab, 0x05, 0x53, 0x28, 0x46, 0xb6, 0x4b, 0x1e, 0x42, 0x40, 0xb1,
	0x06, 0x47, 0xe0, 0x64, 0x9d, 0x9d, 0x75, 0x4c, 0x7e, 0x24, 0xdf, 0x1b, 0xf6, 0x62, 0x49, 0x24,
	0x11, 0xe4, 0xc1, 0xc9, 0xdb, 0xce, 0x39, 0xe3, 0x99, 0x33, 0x67, 0xc6, 0x22, 0xc3, 0xad, 0xe0,
	0x92, 0xe3, 0xf7, 0x2d, 0x47, 0x39, 0xd2, 0x6f, 0x1a, 0x18, 0xe8, 0x23, 0xb5, 0x14, 0x08, 0xc1,
	0x85, 0xe1, 0xe2, 0x3b, 0x97, 0xf8, 0x33, 0x8e, 0x92, 0xbe, 0x25, 0xee, 0x34, 0x65, 0x4e, 0xe4,
	0x24, 0x61, 0xe6, 0x4e, 0x53, 0xfa, 0x9e, 0x74, 0x16, 0xa5, 0xdc, 0x00, 0x73, 0x35, 0x64, 0x02,
	0x4a, 0x89, 0xff, 0x8b, 0x17, 0xb7, 0xcc, 0xd3, 0xa0, 0x7e, 0xd3, 0xcf, 0x84, 0x4c, 0x72, 0x09,
	0x6b, 0x2e, 0x4a, 0x40, 0xe6, 0x47, 0x5e, 0x12, 0x66, 0x0d, 0x44, 0xfd, 0x66, 0x91, 0xaf, 0x91,
	0x75, 0x34, 0xa3, 0xdf, 0xf4, 0x03, 0x09, 0x96, 0x08, 0x62, 0x9a, 0xb2, 0x40, 0x57, 0xb2, 0x11,
	0xfd, 0x44, 0xc2, 0x89, 0x80, 0x5c, 0x42, 0xf1, 0x53, 0xb2, 0xae, 0xa6, 0x6a, 0x40, 0xb1, 0xcb,
	0x6d, 0x61, 0xd9, 0x9e, 0x61, 0x2b, 0x40, 0xd5, 0x9c, 0xcb, 0x5c, 0xee, 0x90, 0x85, 0xa6, 0xa6,
	0x89, 0xd4, 0x24, 0xff, 0x4b, 0xd8, 0x23, 0x23, 0x91, 0x93, 0x78, 0x99, 0x09, 0x94, 0xea, 0x3f,
	0xf9, 0x0d, 0xdf, 0x89, 0x52, 0x02, 0xb2, 0xbe, 0xa6, 0x1a, 0x48, 0x7c, 0x49, 0x06, 0x19, 0x5c,
	0x2b, 0x6b, 0x4c, 0xff, 0xda, 0x10, 0xe7, 0x29, 0x43, 0xdc, 0x56, 0x43, 0xbc, 0x56, 0x43, 0xfc,
	0xda, 0x90, 0xf8, 0x44, 0xb5, 0xc3, 0x46, 0xbb, 0xc8, 0xec, 0x45, 0x77, 0xeb, 0x8f, 0xdf, 0x98,
	0x75, 0xe1, 0x48, 0x61, 0x99, 0xd9, 0xd8, 0x17, 0x12, 0xfc, 0x56, 0x9b, 0x44, 0xe6, 0x46, 0x5e,
	0xd2, 0x1f, 0x0f, 0x0e, 0x39, 0x1a, 0xcd, 0x2c, 0xd9, 0x18, 0xc4, 0x58, 0xf5, 0x6a, 0x83, 0xd8,
	0x76, 0x47, 0x1b, 0xe4, 0x6b, 0x35, 0x48, 0x0a, 0x1b, 0x90, 0xa0, 0x16, 0xae, 0xa2, 0xea, 0x6c,
	0x6d, 0x14, 0xcf, 0x2a, 0x09, 0x36, 0x91, 0x91, 0xee, 0x7c, 0xb7, 0x5a, 0x01, 0xa2, 0xce, 0xec,
	0x65, 0x87, 0xf0, 0xb9, 0xad, 0xff, 0x92, 0x77, 0x87, 0x63, 0xb8, 0xc8, 0xaf, 0xd6, 0x60, 0x2f,
	0xab, 0x45, 0x80, 0xba, 0xd3, 0x7f, 0xb0, 0xb7, 0xc7, 0x68, 0x0c, 0xad, 0x81, 0xf8, 0x4c, 0x15,
	0xc3, 0x47, 0xc5, 0x5e, 0xc0, 0x27, 0x75, 0xe9, 0x50, 0xb4, 0xfa, 0x54, 0xaf, 0xca, 0x26, 0x1e,
	0x4d, 0xc2, 0x37, 0x32, 0xb4, 0x12, 0xaa, 0x7f, 0x54, 0xbb, 0x8c, 0x53, 0x95, 0x8c, 0x0f, 0x92,
	0x8f, 0x25, 0xe5, 0xdc, 0x7c, 0xfc, 0x7e, 0xdc, 0x07, 0x00, 0x00, 0xff, 0xff, 0x25, 0x72, 0x22,
	0x28, 0x18, 0x05, 0x00, 0x00,
}
