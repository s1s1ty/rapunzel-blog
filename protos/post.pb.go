// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/post.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Post struct {
	Id         string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title      string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Body       string   `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Categories []string `protobuf:"bytes,4,rep,name=categories" json:"categories,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	UserId     string   `protobuf:"bytes,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedAt  string   `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt  string   `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	Status     string   `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	Views      int64    `protobuf:"varint,10,opt,name=views" json:"views,omitempty"`
	Favourites int64    `protobuf:"varint,11,opt,name=favourites" json:"favourites,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Post) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Post) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Post) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Post) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Post) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Post) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Post) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Post) GetViews() int64 {
	if m != nil {
		return m.Views
	}
	return 0
}

func (m *Post) GetFavourites() int64 {
	if m != nil {
		return m.Favourites
	}
	return 0
}

type ReqPostCreate struct {
	Title      string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Body       string   `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	Categories []string `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
	Tags       []string `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
}

func (m *ReqPostCreate) Reset()                    { *m = ReqPostCreate{} }
func (m *ReqPostCreate) String() string            { return proto.CompactTextString(m) }
func (*ReqPostCreate) ProtoMessage()               {}
func (*ReqPostCreate) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *ReqPostCreate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqPostCreate) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *ReqPostCreate) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ReqPostCreate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ResPost struct {
	Post   *Post    `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
	Errors []*Error `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty"`
}

func (m *ResPost) Reset()                    { *m = ResPost{} }
func (m *ResPost) String() string            { return proto.CompactTextString(m) }
func (*ResPost) ProtoMessage()               {}
func (*ResPost) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *ResPost) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *ResPost) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ReqPostUpdate struct {
	Id         string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title      string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Body       string   `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Categories []string `protobuf:"bytes,4,rep,name=categories" json:"categories,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
}

func (m *ReqPostUpdate) Reset()                    { *m = ReqPostUpdate{} }
func (m *ReqPostUpdate) String() string            { return proto.CompactTextString(m) }
func (*ReqPostUpdate) ProtoMessage()               {}
func (*ReqPostUpdate) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *ReqPostUpdate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReqPostUpdate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqPostUpdate) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *ReqPostUpdate) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *ReqPostUpdate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ResPostSuccess struct {
	Success bool     `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Errors  []*Error `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty"`
}

func (m *ResPostSuccess) Reset()                    { *m = ResPostSuccess{} }
func (m *ResPostSuccess) String() string            { return proto.CompactTextString(m) }
func (*ResPostSuccess) ProtoMessage()               {}
func (*ResPostSuccess) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *ResPostSuccess) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ResPostSuccess) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ReqPostChangeStatus struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	NewStatus string `protobuf:"bytes,2,opt,name=new_status,json=newStatus" json:"new_status,omitempty"`
}

func (m *ReqPostChangeStatus) Reset()                    { *m = ReqPostChangeStatus{} }
func (m *ReqPostChangeStatus) String() string            { return proto.CompactTextString(m) }
func (*ReqPostChangeStatus) ProtoMessage()               {}
func (*ReqPostChangeStatus) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *ReqPostChangeStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReqPostChangeStatus) GetNewStatus() string {
	if m != nil {
		return m.NewStatus
	}
	return ""
}

type ResPostList struct {
	Posts []*Post `protobuf:"bytes,1,rep,name=posts" json:"posts,omitempty"`
	Pager *Pager  `protobuf:"bytes,2,opt,name=pager" json:"pager,omitempty"`
}

func (m *ResPostList) Reset()                    { *m = ResPostList{} }
func (m *ResPostList) String() string            { return proto.CompactTextString(m) }
func (*ResPostList) ProtoMessage()               {}
func (*ResPostList) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *ResPostList) GetPosts() []*Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *ResPostList) GetPager() *Pager {
	if m != nil {
		return m.Pager
	}
	return nil
}

func init() {
	proto.RegisterType((*Post)(nil), "protos.Post")
	proto.RegisterType((*ReqPostCreate)(nil), "protos.ReqPostCreate")
	proto.RegisterType((*ResPost)(nil), "protos.ResPost")
	proto.RegisterType((*ReqPostUpdate)(nil), "protos.ReqPostUpdate")
	proto.RegisterType((*ResPostSuccess)(nil), "protos.ResPostSuccess")
	proto.RegisterType((*ReqPostChangeStatus)(nil), "protos.ReqPostChangeStatus")
	proto.RegisterType((*ResPostList)(nil), "protos.ResPostList")
}

func init() { proto.RegisterFile("protos/post.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x15, 0xdb, 0x71, 0xea, 0x09, 0xad, 0xc4, 0x16, 0xc1, 0xaa, 0x52, 0x91, 0x65, 0x84,
	0x94, 0x53, 0x91, 0xca, 0x13, 0x54, 0xc0, 0x01, 0x89, 0x43, 0xd9, 0x0a, 0xae, 0x91, 0x6b, 0x0f,
	0x61, 0x25, 0x92, 0x0d, 0x3b, 0xeb, 0x46, 0x1c, 0x78, 0x10, 0xde, 0x16, 0xed, 0xcc, 0x9a, 0x46,
	0x40, 0x24, 0x4e, 0xdc, 0x66, 0xfe, 0x6f, 0xbd, 0x9e, 0xf9, 0x7f, 0x1b, 0x1e, 0x6e, 0xbd, 0x0b,
	0x8e, 0x5e, 0x6c, 0x1d, 0x85, 0x0b, 0xae, 0x55, 0x29, 0xd2, 0x99, 0x4a, 0x08, 0xbd, 0x77, 0x5e,
	0xd8, 0xd9, 0x69, 0xd2, 0x3a, 0xb7, 0x5e, 0xbb, 0x8d, 0x88, 0xcd, 0x8f, 0x0c, 0x8a, 0x6b, 0x47,
	0x41, 0x9d, 0x40, 0x66, 0x7b, 0x3d, 0xa9, 0x27, 0x8b, 0xca, 0x64, 0xb6, 0x57, 0x8f, 0x60, 0x1a,
	0x6c, 0xf8, 0x82, 0x3a, 0x63, 0x49, 0x1a, 0xa5, 0xa0, 0xb8, 0x75, 0xfd, 0x37, 0x9d, 0xb3, 0xc8,
	0xb5, 0x7a, 0x0a, 0xd0, 0xb5, 0x01, 0x57, 0xce, 0x5b, 0x24, 0x5d, 0xd4, 0xf9, 0xa2, 0x32, 0x7b,
	0x4a, 0x7c, 0x26, 0xb4, 0x2b, 0xd2, 0x53, 0x26, 0x5c, 0xab, 0x27, 0x30, 0x1b, 0x08, 0xfd, 0xd2,
	0xf6, 0xba, 0xe4, 0xab, 0xca, 0xd8, 0xbe, 0xed, 0xd5, 0x39, 0x40, 0xe7, 0xb1, 0x0d, 0xd8, 0x2f,
	0xdb, 0xa0, 0x67, 0xcc, 0xaa, 0xa4, 0x5c, 0x85, 0x88, 0x87, 0x6d, 0x3f, 0xe2, 0x23, 0xc1, 0x49,
	0xb9, 0x0a, 0xea, 0x31, 0x94, 0x14, 0xda, 0x30, 0x90, 0xae, 0xe4, 0x56, 0xe9, 0xe2, 0x32, 0x77,
	0x16, 0x77, 0xa4, 0xa1, 0x9e, 0x2c, 0x72, 0x23, 0x4d, 0x1c, 0xfc, 0x53, 0x7b, 0xe7, 0x06, 0x6f,
	0x03, 0x92, 0x9e, 0x33, 0xda, 0x53, 0x9a, 0x35, 0x1c, 0x1b, 0xfc, 0x1a, 0xdd, 0x79, 0xc5, 0x03,
	0xdc, 0x7b, 0x32, 0xf9, 0x9b, 0x27, 0xd9, 0x41, 0x4f, 0xf2, 0x83, 0x9e, 0x14, 0xf7, 0x9e, 0x34,
	0x06, 0x66, 0x06, 0x89, 0xc3, 0xa8, 0xa1, 0x88, 0xa1, 0xf2, 0x7b, 0xe6, 0x97, 0x0f, 0x24, 0x2b,
	0xba, 0x88, 0xcc, 0x30, 0x51, 0xcf, 0xa1, 0xe4, 0x6c, 0x49, 0x67, 0x75, 0xbe, 0x98, 0x5f, 0x1e,
	0x8f, 0x67, 0xde, 0x44, 0xd5, 0x24, 0xd8, 0x7c, 0xff, 0xb5, 0xc2, 0x07, 0x36, 0xe9, 0xff, 0xc6,
	0xdc, 0xbc, 0x87, 0x93, 0xb4, 0xd2, 0xcd, 0xd0, 0x75, 0x48, 0xa4, 0x34, 0xcc, 0x48, 0x4a, 0x1e,
	0xe2, 0xc8, 0x8c, 0xed, 0xbf, 0x6e, 0xf4, 0x1a, 0x4e, 0xc7, 0x50, 0x3e, 0xb7, 0x9b, 0x15, 0xde,
	0x48, 0xc2, 0xbf, 0xef, 0x75, 0x0e, 0xb0, 0xc1, 0xdd, 0x32, 0x7d, 0x0d, 0xb2, 0x5c, 0xb5, 0xc1,
	0x9d, 0x1c, 0x6f, 0x3e, 0xc2, 0x3c, 0x0d, 0xf6, 0xce, 0x52, 0x50, 0x0d, 0x4c, 0xa3, 0xab, 0x71,
	0xa6, 0xfc, 0x0f, 0xc3, 0x05, 0xa9, 0x67, 0x30, 0xdd, 0xb6, 0x2b, 0xf4, 0x7c, 0xd9, 0xde, 0x78,
	0xd7, 0x51, 0x34, 0xc2, 0x6e, 0xe5, 0xff, 0x7b, 0xf9, 0x33, 0x00, 0x00, 0xff, 0xff, 0x15, 0xd8,
	0x61, 0x74, 0x9b, 0x03, 0x00, 0x00,
}
